
#!/bin/bash
# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail
set -e
set -x

REPO_ROOT="$(git rev-parse --show-toplevel)"
CMD=${REPO_ROOT}/dev/tools/controllerbuilder

if [[ -n "$1" ]]; then
  metadata=$1
  package=$(echo "$metadata" | jq -r '.package')
  kind=$(echo "$metadata" | jq -r '.kind')
  proto=$(echo "$metadata" | jq -r '.proto')
  service=$(echo "$metadata" | jq -r '.service')
else 
  if [[ -z "${PACKAGE:-}" ]]; then
    echo "PACKAGE must be set"
    package=${PACKGE}
    exit 1
  fi
  if [[ -z "${KIND:-}" ]]; then
    echo "KIND must be set"
    kind=${KIND}
    exit 1
  fi

  if [[ -z "${PROTO:-}" ]]; then
    echo "PROTO must be set"
    proto=${PROTO}
    exit 1
  fi

  if [[ -z "${SERVICE:-}" ]]; then
    echo "SERVICE must be set"
    service=${SERVICE}
    exit 1
  fi
fi


output=$(${REPO_ROOT}/dev/tasks/generate-crds 2>&1)

if [[ $? -ne 0 ]]; then
    echo ${output}
    exit 1
fi

# Check no compile error.
service=$(echo "$metadata" | jq -r '.service')
proto=$(echo "$metadata" | jq -r '.proto')

resource_dir="${REPO_ROOT}/apis/${service}/v1alpha1"
files=$(find "${REPO_ROOT}/apis/${service}/v1alpha1" -name "${proto,,}_*.go")
if [[ -z "$files" ]]; then
  echo "No files found matches the pattern."
  exit 1
fi

output=$(go build $resource_dir 2>&1)
if [[ $? -ne 0 ]]; then
  echo  "go build failed: $output"
  exit 1
fi

# todo linter