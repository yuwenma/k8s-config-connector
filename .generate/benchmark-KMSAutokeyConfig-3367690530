```go
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1beta1

import (
	"github.com/GoogleCloudPlatform/k8s-config-connector/pkg/apis/k8s/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type KMSAutokeyConfigSpec struct {
	/* Immutable. The folder that this resource belongs to. */
	FolderRef v1alpha1.FolderRef `json:"folderRef"`
	/* Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default. */
	// +optional
	ResourceID *string `json:"resourceID,omitempty"`
	/*  Optional. Name of the key project, e.g. `projects/{PROJECT_ID}` or
	`projects/{PROJECT_NUMBER}`, where Cloud KMS Autokey will provision a new
	[CryptoKey][google.cloud.kms.v1.CryptoKey] when a
	[KeyHandle][google.cloud.kms.v1.KeyHandle] is created. */
	// +optional
	KeyProjectRef *v1alpha1.ProjectRef `json:"keyProjectRef,omitempty"`
}

type KMSAutokeyConfigObservedState struct {
	/* Output only. The state for the AutokeyConfig. */
	// +optional
	State *string `json:"state,omitempty"`
}

type KMSAutokeyConfigStatus struct{
    /* Conditions represent the latest available observations of the
	   KMSAutokeyConfig's current state. */
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`

	/* ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource. */
	// +optional
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`

    KMSAutokeyConfigObservedState `json:",inline"`
}


// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// KMSAutokeyConfig is the Schema for the kmsautokeyconfigs API
// +k8s:openapi-gen=true
type KMSAutokeyConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   KMSAutokeyConfigSpec   `json:"spec,omitempty"`
	Status KMSAutokeyConfigStatus `json:"status,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// KMSAutokeyConfigList contains a list of KMSAutokeyConfig
type KMSAutokeyConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KMSAutokeyConfig `json:"items"`
}

func init() {
	SchemeBuilder.Register(&KMSAutokeyConfig{}, &KMSAutokeyConfigList{})
}

```
