```go
// Generated by protoc-gen-k8s. DO NOT EDIT.
// source: google/bigtable/admin/v2/table.proto

package v1beta1

import (
	"fmt"
	"strconv"

	"google.golang.org/protobuf/types/known/durationpb"

	"sigs.k8s.io/controller-runtime/pkg/webhook/admission"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// +kubebuilder:object:generate=true
// +groupName=bigtableadmin.google.cnrm.cloud.google.com
// +versionName=v1beta1
var _ = fmt.Sprint("")

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// +kubebuilder:webhook:path=/mutate-bigtableadmin-google-cnrm-cloud-google-com-v1beta1-bigtabletable,mutating=true,failurePolicy=fail,sideEffects=None,groups=bigtableadmin.google.cnrm.cloud.google.com,resources=bigtabletables,verbs=create;update,versions=v1beta1,name=mbigtabletable.kb.io,admissionReviewVersions=v1

var _ admission.Defaulter = &BigtableTable{}

// Default implements admission.Defaulter.
func (r *BigtableTable) Default() {
	if r.Spec.ResourceID == nil {
		r.Spec.ResourceID = new(string)
		*r.Spec.ResourceID = r.Name
	}

}

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// +kubebuilder:webhook:path=/validate-bigtableadmin-google-cnrm-cloud-google-com-v1beta1-bigtabletable,mutating=false,failurePolicy=fail,sideEffects=None,groups=bigtableadmin.google.cnrm.cloud.google.com,resources=bigtabletables,verbs=create;update,versions=v1beta1,name=vbigtabletable.kb.io,admissionReviewVersions=v1

var _ admission.Validator = &BigtableTable{}

// ValidateCreate implements admission.Validator.
func (r *BigtableTable) ValidateCreate() (admission.Warnings, error) {
	return nil, nil
}

// ValidateUpdate implements admission.Validator.
func (r *BigtableTable) ValidateUpdate(old runtime.Object) (admission.Warnings, error) {
	return nil, nil
}

// ValidateDelete implements admission.Validator.
func (r *BigtableTable) ValidateDelete() (admission.Warnings, error) {
	return nil, nil
}

type BigtableTableSpec struct {
	// The BigtableTable name. If not given, the metadata.name will be used.
	ResourceID *string `json:"resourceID,omitempty"`

	// If specified, enable the change stream on this table.
	// Otherwise, the change stream is disabled and the change stream is not
	// retained.
	ChangeStreamConfig *ChangeStreamConfig `json:"changeStreamConfig,omitempty"`

	// The column families configured for this table, mapped by column family ID.
	// Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
	ColumnFamilies map[string]ColumnFamily `json:"columnFamilies,omitempty"`

	// Set to true to make the table protected against data loss. i.e. deleting
	// the following resources through Admin APIs are prohibited:
	//
	// * The table.
	// * The column families in the table.
	// * The instance containing the table.
	//
	// Note one can still delete the data stored in the table through Data APIs.
	DeletionProtection *bool `json:"deletionProtection,omitempty"`

	// Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored
	// in this table. Timestamps not matching the granularity will be rejected. If
	// unspecified at creation time, the value will be set to `MILLIS`. Views:
	// `SCHEMA_VIEW`, `FULL`.
	Granularity *string `json:"granularity,omitempty"`

	// +kubebuilder:validation:Required
	InstanceRef *BigtableInstanceRef `json:"instanceRef"`



	// If specified, automated backups are enabled for this table.
	// Otherwise, automated backups are disabled.
	AutomatedBackupPolicy *TableAutomatedBackupPolicy `json:"automatedBackupPolicy,omitempty"`
}



// BigtableTableObservedState is the state of the BigtableTable resource as most recently observed in GCP.
type BigtableTableObservedState struct {
	// Output only. Map from cluster ID to per-cluster table state.
	// If it could not be determined whether or not the table has data in a
	// particular cluster (for example, if its zone is unavailable), then
	// there will be an entry for the cluster with UNKNOWN `replication_status`.
	// Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
	ClusterStates map[string]ClusterState `json:"clusterStates,omitempty"`

	// Output only. If this table was restored from another data source (e.g. a
	// backup), this field will be populated with information about the restore.
	RestoreInfo *RestoreInfo `json:"restoreInfo,omitempty"`
}

type ChangeStreamConfig struct {
	// How long the change stream should be retained. Change stream data older
	// than the retention period will not be returned when reading the change
	// stream from the table.
	// Values must be at least 1 day and at most 7 days, and will be truncated to
	// microsecond granularity.
	RetentionPeriod *durationpb.Duration `json:"retentionPeriod,omitempty"`
}

type ColumnFamily struct {
	// Garbage collection rule specified as a protobuf.
	// Must serialize to at most 500 bytes.
	//
	// NOTE: Garbage collection executes opportunistically in the background, and
	// so it's possible for reads to return a cell even if it matches the active
	// GC expression for its family.
	GcRule *GcRule `json:"gcRule,omitempty"`

	// The type of data stored in each of this family's cell values, including its
	// full encoding. If omitted, the family only serves raw untyped bytes.
	//
	// For now, only the `Aggregate` type is supported.
	//
	// `Aggregate` can only be set at family creation and is immutable afterwards.
	//
	//
	// If `value_type` is `Aggregate`, written data must be compatible with:
	//  * `value_type.input_type` for `AddInput` mutations
	ValueType *Type `json:"valueType,omitempty"`
}

//
type ClusterState struct {
	// Output only. The state of replication for the table in this cluster.
	ReplicationState *string `json:"replicationState,omitempty"`

	// Output only. The encryption information for the table in this cluster.
	// If the encryption key protecting this resource is customer managed, then
	// its version can be rotated in Cloud Key Management Service (Cloud KMS).
	// The primary version of the key and its status will be reflected here when
	// changes propagate from Cloud KMS.
	EncryptionInfo []EncryptionInfo `json:"encryptionInfo,omitempty"`
}

type EncryptionInfo struct {
	// Output only. The type of encryption used to protect this resource.
	EncryptionType *string `json:"encryptionType,omitempty"`

	// Output only. The version of the Cloud KMS key specified in the parent
	// cluster that is in use for the data underlying this table.
	KmsKeyVersion *string `json:"kmsKeyVersion,omitempty"`
}

type GcRule struct {
	// Delete all cells in a column except the most recent N.
	MaxNumVersions *int32 `json:"maxNumVersions,omitempty"`

	// Delete cells in a column older than the given age.
	// Values must be at least one millisecond, and will be truncated to
	// microsecond granularity.
	MaxAge *durationpb.Duration `json:"maxAge,omitempty"`

	// Delete cells that would be deleted by every nested rule.
	Intersection *GcRuleIntersection `json:"intersection,omitempty"`

	// Delete cells that would be deleted by any nested rule.
	Union *GcRuleUnion `json:"union,omitempty"`
}

type GcRuleIntersection struct {
	// Only delete cells which would be deleted by every element of `rules`.
	Rules []GcRule `json:"rules,omitempty"`
}

type GcRuleUnion struct {
	// Delete cells which would be deleted by any element of `rules`.
	Rules []GcRule `json:"rules,omitempty"`
}

type RestoreInfo struct {
	// The type of the restore source.
	SourceType *string `json:"sourceType,omitempty"`

	// Information about the backup used to restore the table. The backup
	// may no longer exist.
	BackupInfo *BackupInfo `json:"backupInfo,omitempty"`
}

type BackupInfo struct {
	// Output only. Name of the backup.
	Backup *string `json:"backup,omitempty"`

	// Output only. The time that the backup was started. Row data in the backup
	// will be no older than this timestamp.
	StartTime *string `json:"startTime,omitempty"`

	// Output only. This time that the backup was finished. Row data in the
	// backup will be no newer than this timestamp.
	EndTime *string `json:"endTime,omitempty"`

	// Output only. Name of the table the backup was created from.
	SourceTable *string `json:"sourceTable,omitempty"`

	// Output only. Name of the backup from which this backup was copied. If a
	// backup is not created by copying a backup, this field will be empty. Values
	// are of the form:
	// projects/<project>/instances/<instance>/clusters/<cluster>/backups/<backup>
	SourceBackup *string `json:"sourceBackup,omitempty"`
}

type TableAutomatedBackupPolicy struct {
	// Required. How long the automated backups should be retained. The only
	// supported value at this time is 3 days.
	RetentionPeriod *durationpb.Duration `json:"retentionPeriod,omitempty"`

	// Required. How frequently automated backups should occur. The only
	// supported value at this time is 24 hours.
	Frequency *durationpb.Duration `json:"frequency,omitempty"`
}


type Type struct {
	// Bytes
	BytesType *TypeBytes `json:"bytesType,omitempty"`

	// String
	StringType *TypeString `json:"stringType,omitempty"`

	// Int64
	Int64Type *TypeInt64 `json:"int64Type,omitempty"`

	// Float32
	Float32Type *TypeFloat32 `json:"float32Type,omitempty"`

	// Float64
	Float64Type *TypeFloat64 `json:"float64Type,omitempty"`

	// Bool
	BoolType *TypeBool `json:"boolType,omitempty"`

	// Timestamp
	TimestampType *TypeTimestamp `json:"timestampType,omitempty"`

	// Date
	DateType *TypeDate `json:"dateType,omitempty"`

	// Aggregate
	AggregateType *TypeAggregate `json:"aggregateType,omitempty"`

	// Struct
	StructType *TypeStruct `json:"structType,omitempty"`

	// Array
	ArrayType *TypeArray `json:"arrayType,omitempty"`

	// Map
	MapType *TypeMap `json:"mapType,omitempty"`
}

type TypeAggregate struct {
	// Type of the inputs that are accumulated by this `Aggregate`, which must
	// specify a full encoding.
	// Use `AddInput` mutations to accumulate new inputs.
	InputType *Type `json:"inputType,omitempty"`

	// Output only. Type that holds the internal accumulator state for the
	// `Aggregate`. This is a function of the `input_type` and `aggregator`
	// chosen, and will always specify a full encoding.
	StateType *Type `json:"stateType,omitempty"`

	// Sum aggregator.
	Sum *TypeAggregateSum `json:"sum,omitempty"`

	// HyperLogLogPlusPlusUniqueCount aggregator.
	HllppUniqueCount *TypeAggregateHLLPPUniqueCount `json:"hllppUniqueCount,omitempty"`

	// Max aggregator.
	Max *TypeAggregateMax `json:"max,omitempty"`

	// Min aggregator.
	Min *TypeAggregateMin `json:"min,omitempty"`
}

type TypeAggregateHLLPPUniqueCount struct {
}

type TypeAggregateMax struct {
}

type TypeAggregateMin struct {
}

type TypeAggregateSum struct {
}

type TypeArray struct {
	// The type of the elements in the array. This must not be `Array`.
	ElementType *Type `json:"elementType,omitempty"`
}

type TypeBool struct {
}

type TypeBytes struct {
	// The encoding to use when converting to/from lower level types.
	Encoding *string `json:"encoding,omitempty"`
}

type TypeDate struct {
}

type TypeFloat32 struct {
}

type TypeFloat64 struct {
}

type TypeInt64 struct {
	// The encoding to use when converting to/from lower level types.
	Encoding *string `json:"encoding,omitempty"`
}

type TypeMap struct {
	// The type of a map key.
	// Only `Bytes`, `String`, and `Int64` are allowed as key types.
	KeyType *Type `json:"keyType,omitempty"`

	// The type of the values in a map.
	ValueType *Type `json:"valueType,omitempty"`
}

type TypeString struct {
	// The encoding to use when converting to/from lower level types.
	Encoding *string `json:"encoding,omitempty"`
}

type TypeStruct struct {
	// The names and types of the fields in this struct.
	Fields []TypeStructField `json:"fields,omitempty"`
}

type TypeStructField struct {
	// The field name (optional). Fields without a `field_name` are considered
	// anonymous and cannot be referenced by name.
	FieldName *string `json:"fieldName,omitempty"`

	// The type of values in this field.
	Type *Type `json:"type,omitempty"`
}

type TypeTimestamp struct {
}


// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.cnrm\.cloud\.google\.com/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={bigtable,gcp,cnrm-cloud-google-com}
type BigtableTable struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BigtableTableSpec   `json:"spec,omitempty"`
	Status BigtableTableStatus `json:"status,omitempty"`
}

type BigtableTableStatus struct {
	// Conditions represent the latest available observations of the
	// BigtableTable's current state.
	Conditions []v1alpha1.Condition `json:"conditions,omitempty"`
	// Output only. Map from cluster ID to per-cluster table state.
	// If it could not be determined whether or not the table has data in a
	// particular cluster (for example, if its zone is unavailable), then
	// there will be an entry for the cluster with UNKNOWN `replication_status`.
	// Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
	ClusterStates map[string]ClusterState `json:"clusterStates,omitempty"`
	// Output only. If this table was restored from another data source (e.g. a
	// backup), this field will be populated with information about the restore.
        RestoreInfo *RestoreInfo `json:"restoreInfo,omitempty"`
	// ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
}

// +kubebuilder:object:root=true

// BigtableTableList contains a list of BigtableTable
type BigtableTableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BigtableTable `json:"items"`
}

func init() {
	SchemeBuilder.Register(&BigtableTable{}, &BigtableTableList{})
}
```
